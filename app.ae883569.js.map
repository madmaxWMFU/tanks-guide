{"version":3,"sources":["js/utils.js","js/app.js"],"names":["parameters","application_id","getStringParams","params","Object","entries","map","param","key","join","getUrl","path","renderApp","document","querySelector","innerHTML","App","loadData","url","fetch","then","response","json","data","performSearch","cache","window","error","console","dataStore","catch","log","finally","searchByFilter","vehicle","cacheType","type","value","split","filters","searchById","getVehicle","vehicleData","data1","searchData","values","idVehicle","tank_id","description","weight","getVehicleList","is_premium","tier","nation","images","big_icon","short_name","getVehicleTypes","vehicle_types","vehicleTypes","generalData","keys","toLocaleLowerCase","getVehicleNations","vehicle_nations","nationList","module","hot","accept","init","language","vehicle_compare"],"mappings":"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","file":"app.ae883569.js","sourceRoot":"..","sourcesContent":["const parameters = {\n    application_id: process.env.WOT_API_ID_KEY,\n    // application_id: \"42a820be7f4b3fa53490a3eebeae0521\",\n}\n\nconst getStringParams = (params) => {\n    return Object.entries(params).map((param, key) => {\n        // console.log(param)\n        return `${param.join('=')}&`;\n    })\n    .join('');\n}\n\nexport const getUrl = (path, param = {}) => {\n    let params = {...parameters, ...param};\n    getStringParams(params);\n    return `https://api.worldoftanks.ru/wot/encyclopedia/${path}/?${getStringParams(params)}`;\n}\n","import { getUrl } from './utils';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nwindow.dataStore = {\n  init: {\n    cache: 'generalData',\n    path: 'info',\n    param: {\n      language: \"ru\"\n    }\n  },\n  cache: {\n    generalData: null,\n    searchData: null,\n    vehicleData: null,\n  },\n  filters: {},\n  vehicle_compare: [],\n};\n\nwindow.renderApp = renderApp;\nwindow.loadData = loadData;\nwindow.performSearch = performSearch;\nwindow.searchByFilter = searchByFilter;\n\nperformSearch(window.dataStore.init.cache, window.dataStore.init.path, window.dataStore.init.param);\nrenderApp();\n\nfunction renderApp() {\n  document.querySelector('#app-root').innerHTML = `\n        ${App()}\n    `;\n}\n\nfunction loadData(path, param) {\n  const url = getUrl(path, param);\n  return fetch(url)\n    .then((response) => response.json())\n    .then((data) => data);\n}\n\nfunction performSearch(cache, path, param) {\n  window\n    .loadData(path, param)\n    .then(({ error, data }) => {\n      if (error) {\n        console.error('error');\n      } else if (data) {\n        window.dataStore.cache[cache] = data;\n      }\n    })\n    .catch(() => {\n      console.log('Some error occurred.');\n    })\n    .finally(window.renderApp);\n}\n\nfunction searchByFilter(vehicle) {\n  const cacheType = vehicle.type;\n  const [key, value] = vehicle.value.split('-');\n  window.dataStore.filters[key] = value;\n  window.performSearch(cacheType, 'vehicles', window.dataStore.filters);\n}\n\nfunction searchById(vehicle) {\n  const cacheType = vehicle.type;\n  const [key, value] = vehicle.value.split('-');\n  window.dataStore.filters[key] = value;\n  window.performSearch(cacheType, 'vehicleprofile', window.dataStore.filters);\n}\n\nfunction getVehicle() {\n  const data = window.dataStore.cache.vehicleData;\n  const data1 = window.dataStore.cache.searchData;\n  if(data) {\n    console.log(data);\n    console.log(Object.values(data));\n    const idVehicle = Object.values(data)[0].tank_id;\n    console.log(idVehicle);\n    console.log(data1);\n    return `\n      <div> \n        <p>${data1[idVehicle].description}</p>\n        <p>Weight: <b>${Object.values(data)[0].weight}</b></p>\n      </div>\n    `;\n  } else {\n    return '';\n  }\n}\n\nfunction getVehicleList() {\n  const data = window.dataStore.cache.searchData;\n  if(data) {\n    return Object.values(data)\n      .map(vehicle => {\n        return `\n          <div \n            class=\"vehicle-item\" \n            data-type='vehicleData'\n            data-value=\"tank_id-${vehicle.tank_id}\" \n            onclick=\"(${searchById})(this.dataset)\"\n          > \n            <span \n              class=\"vehicle-type ${\n                vehicle.is_premium ? `type-${vehicle.type}--premium` : `type-${vehicle.type}`\n              }\"\n            >\n              ${vehicle.tier}\n            </span>\n            <span \n              class=\"vehicle-flag vehicle-flag-${vehicle.nation}\"\n            ></span>\n            <img \n              class=\"vehicle-img\" \n              src=\"${vehicle.images.big_icon}\" \n              alt=\"${vehicle.short_name}\"\n            > \n            <span \n              class=\"vehicle-title ${vehicle.is_premium ? 'vehicle-title--premium' : ''}\"\n            >\n              ${vehicle.short_name}\n            </span>\n          </div>`;\n      })\n      .join('');\n    } else {\n      return '';\n    }\n}\n\nfunction getVehicleTypes() {\n  const { vehicle_types: vehicleTypes } = window.dataStore.cache.generalData;\n\n  return `\n    <ul class='nation-list'>\n        ${Object.keys(vehicleTypes)\n          .map(type => {\n            return `\n              <li \n                class='type-item' \n                data-type=\"searchData\"\n                data-value=\"type-${type}\" \n                onclick=\"(${window.searchByFilter})(this.dataset);\"\n              >\n                <img \n                  class='type-img' \n                  src='./images/types/${type.toLocaleLowerCase()}.png' \n                  alt='${vehicleTypes[type]}'>\n                <span>\n                  ${vehicleTypes[type]}\n                </span>\n              </li>`;\n          })\n          .join('')}\n    </ul>`;\n}\n\nfunction getVehicleNations() {\n  const { vehicle_nations: nationList } = window.dataStore.cache.generalData;\n\n  return `\n    <ul class='nation-list'>\n        ${Object.keys(nationList)\n          .map(nation => {\n            return `\n              <li \n                class='nation-item' \n                data-type=\"searchData\"\n                data-value=\"nation-${nation}\" \n                onclick=\"(${window.searchByFilter})(this.dataset);\"\n              >\n                <img \n                  class='nation-img' \n                  src='./images/flags/${nation}.png' \n                  alt='${nationList[nation]}'\n                >\n                <span>\n                  ${nationList[nation]}\n                </span>\n              </li>`;\n          })\n          .join('')}\n    </ul>`;\n}\n\nfunction App() {\n  return `\n    <div class=\"nation-wrap\">\n        ${getVehicleNations()}\n    </div>\n    <div class=\"type-wrap\">\n        ${getVehicleTypes()}\n    </div>\n    <div class=\"vehicle-wrap\">\n        ${getVehicleList()}\n    </div>\n    <div class=\"infoVehicle-wrap\">\n        ${getVehicle()}\n    </div>\n  `;\n};\n"]}